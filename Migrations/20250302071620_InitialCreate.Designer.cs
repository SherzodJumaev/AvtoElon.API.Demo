// <auto-generated />
using AvtoElon.API.Demo.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AvtoElon.API.Demo.Migrations
{
    [DbContext(typeof(ApplicationDBContext))]
    [Migration("20250302071620_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AvtoElon.API.Demo.Models.Car", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CarBody")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Definition")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<decimal>("Mileage")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Transmission")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Cars");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CarBody = "New",
                            City = "Tashkent",
                            Color = "Black",
                            Definition = "smth",
                            IsDeleted = false,
                            Mileage = 40m,
                            Name = "Gentra",
                            Transmission = "smth",
                            Year = 2020
                        },
                        new
                        {
                            Id = 2,
                            CarBody = "New",
                            City = "Jizzakh",
                            Color = "White",
                            Definition = "smth",
                            IsDeleted = false,
                            Mileage = 39m,
                            Name = "Damas",
                            Transmission = "smth",
                            Year = 2022
                        },
                        new
                        {
                            Id = 3,
                            CarBody = "New",
                            City = "Kashkadarya",
                            Color = "Blue-white",
                            Definition = "smth",
                            IsDeleted = false,
                            Mileage = 45m,
                            Name = "Nexia 1.6",
                            Transmission = "smth",
                            Year = 2019
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
